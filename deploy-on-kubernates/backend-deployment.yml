apiVersion: apps/v1
kind: Deployment
metadata:
  name: two-tier-database-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: two-tier-database-container
          image: mysql:8.0
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: "rootpassword"
            - name: MYSQL_USER
              value: "appUser"
            - name: MYSQL_PASSWORD
              value: "appUser@123"
            - name: MYSQL_DATABASE
              value: "appData"
          volumeMounts:
            - name: mysql-data
              mountPath: /var/lib/mysql
            - name: init-script
              mountPath: /docker-entrypoint-initdb.d/init.sql
              subPath: init.sql
      volumes:
        - name: mysql-data
          persistentVolumeClaim:
            claimName: mysql-pvc
        - name: init-script
          configMap:
            name: mysql-init-script


---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv
spec:
  capacity:
    storage: 1Gi   # Match the requested storage size of the PVC
  accessModes:
    - ReadWriteOnce  # Match the PVC's access mode
  persistentVolumeReclaimPolicy: Retain
  storageClassName: ""  # Since the PVC doesn't specify a storageClass
  hostPath:
    path: /mnt/mysql-data  # You can change this to a valid path on your node



---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

